#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/hyunkyulee/Developer/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/hyunkyulee/Developer/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/hyunkyulee/Developer/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/hyunkyulee/Developer/google-cloud-sdk/completion.zsh.inc'; fi

export PATH="$HOME/.poetry/bin:$PATH"

USE_GKE_GCLOUD_AUTH_PLUGIN=True

alias k="kubectl"

function lite() {
    open $1 -a Lite\ XL
}

function formatJSON() {
    pbpaste | jq . | pbcopy
}

export NVM_LOADED=false
function nvm_init() {
    if [[ $NVM_LOADED = "false" ]]; then
        export NVM_LOADED="true"
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    fi
}

export PATH="/Users/hyunkyulee/.local/bin:$PATH"

# PATH="/Users/hyunkyulee/perl5/bin${PATH:+:${PATH}}"; export PATH;
# PERL5LIB="/Users/hyunkyulee/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
# PERL_LOCAL_LIB_ROOT="/Users/hyunkyulee/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
# PERL_MB_OPT="--install_base \"/Users/hyunkyulee/perl5\""; export PERL_MB_OPT;
# PERL_MM_OPT="INSTALL_BASE=/Users/hyunkyulee/perl5"; export PERL_MM_OPT;
export PATH="/opt/homebrew/opt/openssl@1.1/bin:$PATH"

# https://www.codyhiar.com/blog/custom-backward-word-deletion-in-zsh/
# This will be our new default `ctrl+w` command
function my_backward_delete_word() {
    # Copy the global WORDCHARS variable to a local variable. That way any
    # modifications are scoped to this function only
    local WORDCHARS=$WORDCHARS
    # Use bash string manipulation to remove `:` so our delete will stop at it
    WORDCHARS="${WORDCHARS//:}"
    # Use bash string manipulation to remove `/` so our delete will stop at it
    WORDCHARS="${WORDCHARS//\/}"
    # Use bash string manipulation to remove `.` so our delete will stop at it
    WORDCHARS="${WORDCHARS//.}"
    WORDCHARS="${WORDCHARS//-}"
    # zle <widget-name> will run an existing widget.
    zle backward-delete-word
}
# `zle -N` will create a new widget that we can use on the command line
zle -N my_backward_delete_word
# bind this new widget to `ctrl+w`
bindkey '^W' my_backward_delete_word

# This will be our `ctrl+alt+w` command
function my_backward_delete_whole_word() {
    # Copy the global WORDCHARS variable to a local variable. That way any
    # modifications are scoped to this function only
    local WORDCHARS=$WORDCHARS
    # Use bash string manipulation to add `:` to WORDCHARS if it's not present
    # already.
    [[ ! $WORDCHARS == *":"* ]] && WORDCHARS="$WORDCHARS"":"
    # zle <widget-name> will run that widget.
    zle backward-delete-word
}
# `zle -N` will create a new widget that we can use on the command line
zle -N my_backward_delete_whole_word
# bind this new widget to `ctrl+alt+w`
bindkey '^[^w' my_backward_delete_whole_word

function branch_history() {
    git reflog | perl -n -e'/.*checkout: moving from \S+ to (.+)$/ && print "$1\n"' | awk '!x[$0]++' | head -n ${1:-10}
}

function chpwd() {
  if [ -f package.json ]; then
    nvm_init
  fi
}

if [ -f package.json ]; then
  nvm_init
fi
